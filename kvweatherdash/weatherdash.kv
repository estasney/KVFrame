#:import FadeTransition kivy.uix.screenmanager.FadeTransition
#:import ActionSeparator kivy.uix.actionbar.ActionSeparator
#:import Factory kivy.factory.Factory
#:import hex kivy.utils.get_color_from_hex

<WeatherScreen>:
    id: screen_manager
    transition: FadeTransition()
    WeatherDaily:
        id: weather_daily
    WeatherHourly:
        id: weather_hourly


<WeatherHourly>:
    name: 'weather_hourly'
    current_weather: current_weather
    forecast_weather_hourly: forecast_weather_hourly
    BoxLayout:
        orientation: 'vertical'
        CurrentWeather:
            id: current_weather
            size_hint: 1, 0.2
        HSeparator:
        ForecastWeatherHourly:
            id: forecast_weather_hourly
            size_hint: 1, 0.75
        StatusBar:
            size_hint: 1, 0.05

<WeatherDaily>:
    name: 'weather_daily'
    current_weather: current_weather
    forecast_weather_daily: forecast_weather_daily
    BoxLayout:
        orientation: 'vertical'
        CurrentWeather:
            id: current_weather
            size_hint: 1, 0.2
        HSeparator:
        ForecastWeatherDaily:
            id: forecast_weather_daily
            size_hint: 1, 0.75
        StatusBar:
            size_hint: 1, 0.05


<CurrentWeather>:
    id: current_weather
    canvas:
        Color:
            rgba: (0.9607843137254902, 0.9607843137254902, 0.9607843137254902, 1)
        Rectangle:
            pos: self.pos
            size: self.size
    BoxLayout:
        orientation: 'vertical'
        Label:
            color: (0, 0, 0, 1)
            text: "{}째F".format(app.current_weather.get('temperature', 'LOADING'))
            font_size: 40

        Label:
            color: (0, 0, 0, 1)
            text: app.current_weather.get('weather_summary', '')
            font_size: 30
        BoxLayout:
            orientation: 'horizontal'
            Label:
                color: (0, 0, 0, 1)
                text: "Sunrise: {}".format(app.sunrise_time)
                font_size: 20
            Label:
                color: (0, 0, 0, 1)
                text: "Sunset: {}".format(app.sunset_time)
                font_size: 20
    VSeparator:
    BoxLayout:
        orientation: 'vertical'
        Label:
            color: (0, 0, 0, 1)
            text: "Humidity: {}%".format(app.current_weather.get('humidity', ''))
            font_size: 20
        Label:
            color: (0, 0, 0, 1)
            text: "Pressure: {}".format(app.current_weather.get('barometer', ''))
            font_size: 20
        Label:
            color: (0, 0, 0, 1)
            text: "Dew Point: {}째F".format(app.current_weather.get('dew_point', ''))
            font_size: 20

<ForecastWeatherDaily>:
    size_hint: 1, 0.7
    canvas:
        Color:
            rgba: (0.5137254901960785, 0.7647058823529413, 0.7999999999999999, 1)
        Rectangle:
            pos: self.pos
            size: self.size
    orientation: 'vertical'

<ForecastWeatherHourly>:
    size_hint: 1, 0.7
    canvas:
        Color:
            rgba: (0.5137254901960785, 0.7647058823529413, 0.7999999999999999, 1)
        Rectangle:
            pos: self.pos
            size: self.size
    orientation: 'vertical'
    FutureWeatherHourlyTHead:

<FutureWeatherHourlyTHead@BoxLayout>:
    orientation: 'horizontal'
    Label:
        color: (0, 0, 0, 1)
        text: "Time"
    Label:
        color: (0, 0, 0, 1)
        text: "Temp"
    Label:
        color: (0, 0, 0, 1)
        text: "Clouds"
    Label:
        color: (0, 0, 0, 1)
        text: "Humidity"
    Label:
        color: (0, 0, 0, 1)
        text: "Rain %"
    Label:
        color: (0, 0, 0, 1)
        text: "Rain Amt"


<FutureWeatherDaily>:
    orientation: 'horizontal'
    Label:
        color: (0, 0, 0, 1)
        text: app.forecast_weather_daily[root.idx].get('str_date', '')
        font_size: 18
    Label:
        text: "[color=f82000]{}[/color][color=000000]/[/color][color=1a24ba]{}[/color][color=000000]째F[/color]".format(app.forecast_weather_daily[root.idx].get('temperature_max', ''), app.forecast_weather_daily[root.idx].get('temperature_min', ''))
        markup: True
        font_size: 40
    Label:
        color: (0, 0, 0, 1)
        text: "{:.0f}% Rain : {:.2f}\"".format(app.forecast_weather_daily[root.idx].get('precipitation_prob_max', 0),app.forecast_weather_daily[root.idx].get('precipitation_qpf_sum', 0))
        font_size: 18



<FutureWeatherHourly>:
    orientation: 'horizontal'
    Label:
        color: (0, 0, 0, 1)
        text: app.forecast_weather_hourly[root.idx].get('display_time', '')
    Label:
        color: (0, 0, 0, 1)
        text: "{}째F".format(app.forecast_weather_hourly[root.idx].get('temperature_hourly', ''))
    Label:
        color: (0, 0, 0, 1)
        text: "{:.0f}%".format(app.forecast_weather_hourly[root.idx].get('clouds', ''))
    Label:
        color: (0, 0, 0, 1)
        text: "{:.0f}%".format(app.forecast_weather_hourly[root.idx].get('humidity', ''))
    Label:
        color: (0, 0, 0, 1)
        text: "{:.0f}%".format(app.forecast_weather_hourly[root.idx].get('precipitation_probability', ''))
    Label:
        color: (0, 0, 0, 1)
        text: "{}\"".format(app.forecast_weather_hourly[root.idx].get('precipitation_qpf', ''))

<StatusBar@BoxLayout>:
    orientation: 'horizontal'
    Label:
        text: "Last Updated : {}".format(app.last_update_time)
    VSeparator:
    Label:
        text: app.clock_time




<Separator>:
    canvas:
        Color:
            rgba: 0.365, 0.365, 0.365, 1
        Rectangle:
            pos: self.pos
            size: self.size

<HSeparator>:
    size_hint_y: None
    height: dp(2)

<VSeparator>:
    size_hint_x: None
    width: dp(2)



